#!/usr/bin/env php
<?php

use Psy\Configuration;
use Inkwell\Console\Quill;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputDefinition;

$app = include __DIR__ . '/../init.php';

call_user_func(function() use ($app) {
    $config = array();
    $input  = new ArgvInput();
    $shell  = new Quill(new Configuration($config));

    echo '                                                                       ' . PHP_EOL;
    echo '     ________        .__.__  .__                                       ' . PHP_EOL;
    echo '     \_____  \  __ __|__|  | |  |       (_)__  / //_/ | /| / /__ / / / ' . PHP_EOL;
    echo '      /  / \  \|  |  \  |  | |  |      / / _ \/ , < | |/ |/ / -_) / /  ' . PHP_EOL;
    echo '     /   \_/.  \  |  /  |  |_|  |__FOR/_/_//_/_/|_| |__/|__/\__/_/_/   ' . PHP_EOL;
    echo '     \_____\ \_/____/|__|____/____/                             3.0    ' . PHP_EOL;
    echo '            \__>                                                       ' . PHP_EOL;
    echo '                                                                       ' . PHP_EOL;
    echo 'Welcome to Quill, the inKWell Console, you can begin typing PHP or try:' . PHP_EOL;
    echo '                                                                       ' . PHP_EOL;
    echo '    - help                                                             ' . PHP_EOL;
    echo '    - clear                                                            ' . PHP_EOL;
    echo '    - history                                                          ' . PHP_EOL;
    echo '    - dump $app                                                        ' . PHP_EOL;
    echo '    - exit                                                             ' . PHP_EOL;
    echo '                                                                       ' . PHP_EOL;

    $input->bind(new InputDefinition(array(
        new InputArgument('include', InputArgument::IS_ARRAY),
    )));

    foreach ($app['engine']->fetch('@quill') as $id) {
        foreach ($app['engine']->fetch($id, '@quill.commands', array()) as $command_class) {
            $shell->add($app['broker']->make($command_class));
        }
    }

    //
    // Execute
    //

    $shell->setPrompt(function() use ($app) {
            $cwd  = getcwd();
            $root = $app->getDirectory();

            if (strpos($cwd, $root) === 0) {
                $cwd = preg_replace('#^' . $root . '#', '@', $cwd);
            }

            return sprintf('[%s]', $cwd);
    });

    $shell->setIncludes($input->getArgument('include'));
    $shell->setScopeVariables(['app' => $app]);
    $shell->run();
});
